/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import type {
  BaseContract,
  BytesLike,
  FunctionFragment,
  Result,
  Interface,
  EventFragment,
  AddressLike,
  ContractRunner,
  ContractMethod,
  Listener,
} from "ethers";
import type {
  TypedContractEvent,
  TypedDeferredTopicFilter,
  TypedEventLog,
  TypedLogDescription,
  TypedListener,
  TypedContractMethod,
} from "../../common";

export interface AllowlistAdminRoleInterface extends Interface {
  getFunction(
    nameOrSignature:
      | "addAllowlistAdmin"
      | "isAllowlistAdmin"
      | "removeAllowlistAdmin"
      | "renounceAllowlistAdmin"
  ): FunctionFragment;

  getEvent(
    nameOrSignatureOrTopic: "AllowlistAdminAdded" | "AllowlistAdminRemoved"
  ): EventFragment;

  encodeFunctionData(
    functionFragment: "addAllowlistAdmin",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "isAllowlistAdmin",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "removeAllowlistAdmin",
    values: [AddressLike, AddressLike]
  ): string;
  encodeFunctionData(
    functionFragment: "renounceAllowlistAdmin",
    values: [AddressLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "addAllowlistAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "isAllowlistAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "removeAllowlistAdmin",
    data: BytesLike
  ): Result;
  decodeFunctionResult(
    functionFragment: "renounceAllowlistAdmin",
    data: BytesLike
  ): Result;
}

export namespace AllowlistAdminAddedEvent {
  export type InputTuple = [token: AddressLike, account: AddressLike];
  export type OutputTuple = [token: string, account: string];
  export interface OutputObject {
    token: string;
    account: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export namespace AllowlistAdminRemovedEvent {
  export type InputTuple = [token: AddressLike, account: AddressLike];
  export type OutputTuple = [token: string, account: string];
  export interface OutputObject {
    token: string;
    account: string;
  }
  export type Event = TypedContractEvent<InputTuple, OutputTuple, OutputObject>;
  export type Filter = TypedDeferredTopicFilter<Event>;
  export type Log = TypedEventLog<Event>;
  export type LogDescription = TypedLogDescription<Event>;
}

export interface AllowlistAdminRole extends BaseContract {
  connect(runner?: ContractRunner | null): AllowlistAdminRole;
  waitForDeployment(): Promise<this>;

  interface: AllowlistAdminRoleInterface;

  queryFilter<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;
  queryFilter<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEventLog<TCEvent>>>;

  on<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  on<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  once<TCEvent extends TypedContractEvent>(
    event: TCEvent,
    listener: TypedListener<TCEvent>
  ): Promise<this>;
  once<TCEvent extends TypedContractEvent>(
    filter: TypedDeferredTopicFilter<TCEvent>,
    listener: TypedListener<TCEvent>
  ): Promise<this>;

  listeners<TCEvent extends TypedContractEvent>(
    event: TCEvent
  ): Promise<Array<TypedListener<TCEvent>>>;
  listeners(eventName?: string): Promise<Array<Listener>>;
  removeAllListeners<TCEvent extends TypedContractEvent>(
    event?: TCEvent
  ): Promise<this>;

  addAllowlistAdmin: TypedContractMethod<
    [token: AddressLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  isAllowlistAdmin: TypedContractMethod<
    [token: AddressLike, account: AddressLike],
    [boolean],
    "view"
  >;

  removeAllowlistAdmin: TypedContractMethod<
    [token: AddressLike, account: AddressLike],
    [void],
    "nonpayable"
  >;

  renounceAllowlistAdmin: TypedContractMethod<
    [token: AddressLike],
    [void],
    "nonpayable"
  >;

  getFunction<T extends ContractMethod = ContractMethod>(
    key: string | FunctionFragment
  ): T;

  getFunction(
    nameOrSignature: "addAllowlistAdmin"
  ): TypedContractMethod<
    [token: AddressLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "isAllowlistAdmin"
  ): TypedContractMethod<
    [token: AddressLike, account: AddressLike],
    [boolean],
    "view"
  >;
  getFunction(
    nameOrSignature: "removeAllowlistAdmin"
  ): TypedContractMethod<
    [token: AddressLike, account: AddressLike],
    [void],
    "nonpayable"
  >;
  getFunction(
    nameOrSignature: "renounceAllowlistAdmin"
  ): TypedContractMethod<[token: AddressLike], [void], "nonpayable">;

  getEvent(
    key: "AllowlistAdminAdded"
  ): TypedContractEvent<
    AllowlistAdminAddedEvent.InputTuple,
    AllowlistAdminAddedEvent.OutputTuple,
    AllowlistAdminAddedEvent.OutputObject
  >;
  getEvent(
    key: "AllowlistAdminRemoved"
  ): TypedContractEvent<
    AllowlistAdminRemovedEvent.InputTuple,
    AllowlistAdminRemovedEvent.OutputTuple,
    AllowlistAdminRemovedEvent.OutputObject
  >;

  filters: {
    "AllowlistAdminAdded(address,address)": TypedContractEvent<
      AllowlistAdminAddedEvent.InputTuple,
      AllowlistAdminAddedEvent.OutputTuple,
      AllowlistAdminAddedEvent.OutputObject
    >;
    AllowlistAdminAdded: TypedContractEvent<
      AllowlistAdminAddedEvent.InputTuple,
      AllowlistAdminAddedEvent.OutputTuple,
      AllowlistAdminAddedEvent.OutputObject
    >;

    "AllowlistAdminRemoved(address,address)": TypedContractEvent<
      AllowlistAdminRemovedEvent.InputTuple,
      AllowlistAdminRemovedEvent.OutputTuple,
      AllowlistAdminRemovedEvent.OutputObject
    >;
    AllowlistAdminRemoved: TypedContractEvent<
      AllowlistAdminRemovedEvent.InputTuple,
      AllowlistAdminRemovedEvent.OutputTuple,
      AllowlistAdminRemovedEvent.OutputObject
    >;
  };
}

/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  AddressLike,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  AllowlistMock,
  AllowlistMockInterface,
} from "../../../contracts/mocks/AllowlistMock";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AllowlistAdminAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AllowlistAdminRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AllowlistedAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "AllowlistedRemoved",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addAllowlistAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addAllowlisted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isAllowlistAdmin",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isAllowlisted",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bool",
        name: "mockActivated",
        type: "bool",
      },
    ],
    name: "mockFunction",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeAllowlistAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeAllowlisted",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
    ],
    name: "renounceAllowlistAdmin",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x608060405234801561001057600080fd5b5060405161081c38038061081c83398101604081905261002f916101a9565b610039813361003f565b506101d9565b6001600160a01b038216600090815260208190526040902061006190826100a5565b806001600160a01b0316826001600160a01b03167f7a247cc00caf875946bd4af440d6b1776fe6bb625e25cad7626bedf5e6a1c37060405160405180910390a35050565b6100af8282610126565b156101015760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650060448201526064015b60405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b0382166101895760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b60648201526084016100f8565b506001600160a01b03166000908152602091909152604090205460ff1690565b6000602082840312156101bb57600080fd5b81516001600160a01b03811681146101d257600080fd5b9392505050565b610634806101e86000396000f3fe608060405234801561001057600080fd5b50600436106100885760003560e01c8063685e25191161005b578063685e2519146100ef5780636c41d4ea14610102578063dfe15da014610115578063fa061ca01461012857600080fd5b80630d21cdd81461008d5780634261699f146100a257806342be5787146100b557806361c2e281146100dc575b600080fd5b6100a061009b366004610574565b61013b565b005b6100a06100b036600461058f565b610148565b6100c86100c336600461058f565b61016b565b604051901515815260200160405180910390f35b6100c86100ea36600461058f565b610194565b6100a06100fd36600461058f565b6101b6565b6100a06101103660046105c2565b6101d4565b6100a061012336600461058f565b6101fe565b6100a061013636600461058f565b61021c565b610145813361023a565b50565b81610153813361016b565b61015c57600080fd5b61016683836102a0565b505050565b6001600160a01b038216600090815260208190526040812061018d9083610306565b9392505050565b6001600160a01b038216600090815260016020526040812061018d9083610306565b816101c1813361016b565b6101ca57600080fd5b610166838361038e565b816101df8133610194565b156101e957600080fd5b506002805460ff191691151591909117905550565b81610209813361016b565b61021257600080fd5b610166838361023a565b81610227813361016b565b61023057600080fd5b61016683836103f4565b6001600160a01b038216600090815260208190526040902061025c908261045a565b806001600160a01b0316826001600160a01b03167f84c618afa7439d9985b8c707a18637a9c6b0128399c0f5dee2ca90254d66fc3a60405160405180910390a35050565b6001600160a01b03821660009081526001602052604090206102c290826104dc565b806001600160a01b0316826001600160a01b03167ff537a4c39a5575220902fda69b79909e02d44c8a7146b1a1c3b936f86aa71e3860405160405180910390a35050565b60006001600160a01b03821661036e5760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b60648201526084015b60405180910390fd5b506001600160a01b03166000908152602091909152604090205460ff1690565b6001600160a01b03821660009081526001602052604090206103b0908261045a565b806001600160a01b0316826001600160a01b03167f99c45157365b22d82f22eea7bc8cff76cb53628113f4b52b10f83db3b404001660405160405180910390a35050565b6001600160a01b038216600090815260208190526040902061041690826104dc565b806001600160a01b0316826001600160a01b03167f7a247cc00caf875946bd4af440d6b1776fe6bb625e25cad7626bedf5e6a1c37060405160405180910390a35050565b6104648282610306565b6104ba5760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b6064820152608401610365565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b6104e68282610306565b156105335760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c65006044820152606401610365565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b80356001600160a01b038116811461056f57600080fd5b919050565b60006020828403121561058657600080fd5b61018d82610558565b600080604083850312156105a257600080fd5b6105ab83610558565b91506105b960208401610558565b90509250929050565b600080604083850312156105d557600080fd5b6105de83610558565b9150602083013580151581146105f357600080fd5b80915050925092905056fea2646970667358221220473b4407da5310db0c1cf478fb04353472f861162e93009e1c5e1ec6931b250664736f6c634300081c0033";

type AllowlistMockConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AllowlistMockConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class AllowlistMock__factory extends ContractFactory {
  constructor(...args: AllowlistMockConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(token, overrides || {});
  }
  override deploy(
    token: AddressLike,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(token, overrides || {}) as Promise<
      AllowlistMock & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): AllowlistMock__factory {
    return super.connect(runner) as AllowlistMock__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AllowlistMockInterface {
    return new Interface(_abi) as AllowlistMockInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): AllowlistMock {
    return new Contract(address, _abi, runner) as unknown as AllowlistMock;
  }
}

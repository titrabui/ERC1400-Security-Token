/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../../../../common";
import type {
  BatchTokenIssuer,
  BatchTokenIssuerInterface,
} from "../../../../contracts/tools/BatchTokenIssuer.sol/BatchTokenIssuer";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "token",
        type: "address",
      },
      {
        internalType: "bytes32[]",
        name: "partitions",
        type: "bytes32[]",
      },
      {
        internalType: "address[]",
        name: "tokenHolders",
        type: "address[]",
      },
      {
        internalType: "uint256[]",
        name: "values",
        type: "uint256[]",
      },
    ],
    name: "batchIssueByPartition",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "interfaceHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "canImplementInterfaceForAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080604052348015600f57600080fd5b5060408051808201909152601081526f2130ba31b42a37b5b2b724b9b9bab2b960811b6020820152603e906042565b60ba565b60016000808360405160200160569190608d565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550565b6000825160005b8181101560ac57602081860181015185830152016094565b506000920191825250919050565b61054b806100c96000396000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c8063249cb3fa1461003b578063edec7e1514610060575b600080fd5b61004e61004936600461038c565b610075565b60405190815260200160405180910390f35b61007361006e366004610404565b6100d6565b005b60008281526020819052604081205460ff16156100cc5760405173455243313832305f4143434550545f4d4147494360601b60208201526034016040516020818303038152906040528051906020012090506100d0565b5060005b92915050565b6040516355138f0d60e11b815233600482015287906001600160a01b0382169063aa271e1a90602401602060405180830381865afa15801561011c573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061014091906104bb565b6101915760405162461bcd60e51b815260206004820152601d60248201527f53656e646572206973206e6f74206120746f6b656e206d696e7465722e00000060448201526064015b60405180910390fd5b8584146102065760405162461bcd60e51b815260206004820152603960248201527f706172746974696f6e7320616e6420746f6b656e486f6c64657273206172726160448201527f7973206861766520646966666572656e74206c656e67746873000000000000006064820152608401610188565b8582146102715760405162461bcd60e51b815260206004820152603360248201527f706172746974696f6e7320616e642076616c75657320617272617973206861766044820152726520646966666572656e74206c656e6774687360681b6064820152608401610188565b60005b8681101561036557886001600160a01b03166367c8491989898481811061029d5761029d6104e4565b905060200201358888858181106102b6576102b66104e4565b90506020020160208101906102cb91906104fa565b8787868181106102dd576102dd6104e4565b6040516001600160e01b031960e088901b16815260048101959095526001600160a01b03909316602485015250602090910201356044820152608060648201526000608482015260a401600060405180830381600087803b15801561034157600080fd5b505af1158015610355573d6000803e3d6000fd5b5050600190920191506102749050565b505050505050505050565b80356001600160a01b038116811461038757600080fd5b919050565b6000806040838503121561039f57600080fd5b823591506103af60208401610370565b90509250929050565b60008083601f8401126103ca57600080fd5b50813567ffffffffffffffff8111156103e257600080fd5b6020830191508360208260051b85010111156103fd57600080fd5b9250929050565b60008060008060008060006080888a03121561041f57600080fd5b61042888610370565b9650602088013567ffffffffffffffff81111561044457600080fd5b6104508a828b016103b8565b909750955050604088013567ffffffffffffffff81111561047057600080fd5b61047c8a828b016103b8565b909550935050606088013567ffffffffffffffff81111561049c57600080fd5b6104a88a828b016103b8565b989b979a50959850939692959293505050565b6000602082840312156104cd57600080fd5b815180151581146104dd57600080fd5b9392505050565b634e487b7160e01b600052603260045260246000fd5b60006020828403121561050c57600080fd5b6104dd8261037056fea264697066735822122060d77856ed8c294e8ceeaf68e9a1e8a2936030eb7595ed1ca93491780728ab5b64736f6c634300081c0033";

type BatchTokenIssuerConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: BatchTokenIssuerConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class BatchTokenIssuer__factory extends ContractFactory {
  constructor(...args: BatchTokenIssuerConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      BatchTokenIssuer & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): BatchTokenIssuer__factory {
    return super.connect(runner) as BatchTokenIssuer__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): BatchTokenIssuerInterface {
    return new Interface(_abi) as BatchTokenIssuerInterface;
  }
  static connect(
    address: string,
    runner?: ContractRunner | null
  ): BatchTokenIssuer {
    return new Contract(address, _abi, runner) as unknown as BatchTokenIssuer;
  }
}

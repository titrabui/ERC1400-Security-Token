/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type {
  Signer,
  BigNumberish,
  ContractDeployTransaction,
  ContractRunner,
} from "ethers";
import type { NonPayableOverrides } from "../../../common";
import type {
  ERC20Token,
  ERC20TokenInterface,
} from "../../../contracts/tokens/ERC20Token";

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol",
        type: "string",
      },
      {
        internalType: "uint8",
        name: "__decimals",
        type: "uint8",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "MinterAdded",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "MinterRemoved",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Paused",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "Unpaused",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "addMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
    ],
    name: "allowance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burn",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "burnFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "interfaceHash",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "canImplementInterfaceForAddress",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "decimals",
    outputs: [
      {
        internalType: "uint8",
        name: "",
        type: "uint8",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "subtractedValue",
        type: "uint256",
      },
    ],
    name: "decreaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "spender",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "addedValue",
        type: "uint256",
      },
    ],
    name: "increaseAllowance",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "isMinter",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "value",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paused",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "removeMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceMinter",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "totalSupply",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transfer",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161162d38038061162d83398101604081905261002f91610348565b828261003a336100a1565b60046100468382610454565b5060056100538282610454565b50506006805460ff1916905550610069336100f1565b60408051808201909152600a81526922a92199182a37b5b2b760b11b602082015261009390610133565b60ff166080525061052e9050565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b6100fc600882610181565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b6001600760008360405160200161014a9190610512565b60408051808303601f19018152918152815160209283012083529082019290925201600020805460ff191691151591909117905550565b61018b8282610202565b156101dd5760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650060448201526064015b60405180910390fd5b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60006001600160a01b0382166102655760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b60648201526084016101d4565b506001600160a01b03166000908152602091909152604090205460ff1690565b634e487b7160e01b600052604160045260246000fd5b60005b838110156102b657818101518382015260200161029e565b50506000910152565b600082601f8301126102d057600080fd5b81516001600160401b038111156102e9576102e9610285565b604051601f8201601f19908116603f011681016001600160401b038111828210171561031757610317610285565b60405281815283820160200185101561032f57600080fd5b61034082602083016020870161029b565b949350505050565b60008060006060848603121561035d57600080fd5b83516001600160401b0381111561037357600080fd5b61037f868287016102bf565b602086015190945090506001600160401b0381111561039d57600080fd5b6103a9868287016102bf565b925050604084015160ff811681146103c057600080fd5b809150509250925092565b600181811c908216806103df57607f821691505b6020821081036103ff57634e487b7160e01b600052602260045260246000fd5b50919050565b601f82111561044f57806000526020600020601f840160051c8101602085101561042c5750805b601f840160051c820191505b8181101561044c5760008155600101610438565b50505b505050565b81516001600160401b0381111561046d5761046d610285565b6104818161047b84546103cb565b84610405565b6020601f8211600181146104b5576000831561049d5750848201515b600019600385901b1c1916600184901b17845561044c565b600084815260208120601f198516915b828110156104e557878501518255602094850194600190920191016104c5565b50848210156105035786840151600019600387901b60f8161c191681555b50505050600190811b01905550565b6000825161052481846020870161029b565b9190910192915050565b6080516110e461054960003960006101e701526110e46000f3fe608060405234801561001057600080fd5b506004361061014d5760003560e01c806370a08231116100c3578063986502751161007c57806398650275146102cf578063a457c2d7146102d7578063a9059cbb146102ea578063aa271e1a146102fd578063dd62ed3e14610310578063f2fde38b1461032357600080fd5b806370a0823114610255578063715018a61461027e57806379cc6790146102865780638da5cb5b1461029957806395d89b41146102b4578063983b2d56146102bc57600080fd5b80633092afd5116101155780633092afd5146101cb578063313ce567146101e0578063395093511461021157806340c10f191461022457806342966c68146102375780635c975abb1461024a57600080fd5b806306fdde0314610152578063095ea7b31461017057806318160ddd1461019357806323b872dd146101a5578063249cb3fa146101b8575b600080fd5b61015a610336565b6040516101679190610ef1565b60405180910390f35b61018361017e366004610f5b565b6103c8565b6040519015158152602001610167565b6003545b604051908152602001610167565b6101836101b3366004610f85565b6103e2565b6101976101c6366004610fc2565b610406565b6101de6101d9366004610fee565b610465565b005b60405160ff7f0000000000000000000000000000000000000000000000000000000000000000168152602001610167565b61018361021f366004610f5b565b610483565b610183610232366004610f5b565b6104a5565b6101de610245366004611010565b6104cc565b60065460ff16610183565b610197610263366004610fee565b6001600160a01b031660009081526001602052604090205490565b6101de6104d6565b6101de610294366004610f5b565b6104ea565b6000546040516001600160a01b039091168152602001610167565b61015a610503565b6101de6102ca366004610fee565b610512565b6101de61052d565b6101836102e5366004610f5b565b610536565b6101836102f8366004610f5b565b6105b6565b61018361030b366004610fee565b6105c4565b61019761031e366004611029565b6105d1565b6101de610331366004610fee565b6105fc565b60606004805461034590611053565b80601f016020809104026020016040519081016040528092919081815260200182805461037190611053565b80156103be5780601f10610393576101008083540402835291602001916103be565b820191906000526020600020905b8154815290600101906020018083116103a157829003601f168201915b5050505050905090565b6000336103d6818585610672565b60019150505b92915050565b6000336103f0858285610797565b6103fb858585610811565b506001949350505050565b60008281526007602052604081205460ff161561045d5760405173455243313832305f4143434550545f4d4147494360601b60208201526034016040516020818303038152906040528051906020012090506103dc565b5060006103dc565b61046e336105c4565b61047757600080fd5b610480816109c7565b50565b6000336103d681858561049683836105d1565b6104a0919061108d565b610672565b60006104b0336105c4565b6104b957600080fd5b6104c38383610a09565b50600192915050565b6104803382610ad6565b6104de610c13565b6104e86000610c6d565b565b6104f5823383610797565b6104ff8282610ad6565b5050565b60606005805461034590611053565b61051b336105c4565b61052457600080fd5b61048081610cbd565b6104e8336109c7565b6000338161054482866105d1565b9050838110156105a95760405162461bcd60e51b815260206004820152602560248201527f45524332303a2064656372656173656420616c6c6f77616e63652062656c6f77604482015264207a65726f60d81b60648201526084015b60405180910390fd5b6103fb8286868403610672565b6000336103d6818585610811565b60006103dc600883610cff565b6001600160a01b03918216600090815260026020908152604080832093909416825291909152205490565b610604610c13565b6001600160a01b0381166106695760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b60648201526084016105a0565b61048081610c6d565b6001600160a01b0383166106d45760405162461bcd60e51b8152602060048201526024808201527f45524332303a20617070726f76652066726f6d20746865207a65726f206164646044820152637265737360e01b60648201526084016105a0565b6001600160a01b0382166107355760405162461bcd60e51b815260206004820152602260248201527f45524332303a20617070726f766520746f20746865207a65726f206164647265604482015261737360f01b60648201526084016105a0565b6001600160a01b0383811660008181526002602090815260408083209487168084529482529182902085905590518481527f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92591015b60405180910390a3505050565b60006107a384846105d1565b9050600019811461080b57818110156107fe5760405162461bcd60e51b815260206004820152601d60248201527f45524332303a20696e73756666696369656e7420616c6c6f77616e636500000060448201526064016105a0565b61080b8484848403610672565b50505050565b6001600160a01b0383166108755760405162461bcd60e51b815260206004820152602560248201527f45524332303a207472616e736665722066726f6d20746865207a65726f206164604482015264647265737360d81b60648201526084016105a0565b6001600160a01b0382166108d75760405162461bcd60e51b815260206004820152602360248201527f45524332303a207472616e7366657220746f20746865207a65726f206164647260448201526265737360e81b60648201526084016105a0565b6108e2838383610d82565b6001600160a01b0383166000908152600160205260409020548181101561095a5760405162461bcd60e51b815260206004820152602660248201527f45524332303a207472616e7366657220616d6f756e7420657863656564732062604482015265616c616e636560d01b60648201526084016105a0565b6001600160a01b0380851660008181526001602052604080822086860390559286168082529083902080548601905591517fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef906109ba9086815260200190565b60405180910390a361080b565b6109d2600882610d8d565b6040516001600160a01b038216907fe94479a9f7e1952cc78f2d6baab678adc1b772d936c6583def489e524cb6669290600090a250565b6001600160a01b038216610a5f5760405162461bcd60e51b815260206004820152601f60248201527f45524332303a206d696e7420746f20746865207a65726f20616464726573730060448201526064016105a0565b610a6b60008383610d82565b8060036000828254610a7d919061108d565b90915550506001600160a01b0382166000818152600160209081526040808320805486019055518481527fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910160405180910390a35050565b6001600160a01b038216610b365760405162461bcd60e51b815260206004820152602160248201527f45524332303a206275726e2066726f6d20746865207a65726f206164647265736044820152607360f81b60648201526084016105a0565b610b4282600083610d82565b6001600160a01b03821660009081526001602052604090205481811015610bb65760405162461bcd60e51b815260206004820152602260248201527f45524332303a206275726e20616d6f756e7420657863656564732062616c616e604482015261636560f01b60648201526084016105a0565b6001600160a01b03831660008181526001602090815260408083208686039055600380548790039055518581529192917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef910161078a565b505050565b6000546001600160a01b031633146104e85760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e657260448201526064016105a0565b600080546001600160a01b038381166001600160a01b0319831681178455604051919092169283917f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e09190a35050565b610cc8600882610e0f565b6040516001600160a01b038216907f6ae172837ea30b801fbfcdd4108aa1d5bf8ff775444fd70256b44e6bf3dfc3f690600090a250565b60006001600160a01b038216610d625760405162461bcd60e51b815260206004820152602260248201527f526f6c65733a206163636f756e7420697320746865207a65726f206164647265604482015261737360f01b60648201526084016105a0565b506001600160a01b03166000908152602091909152604090205460ff1690565b610c0e838383610e8b565b610d978282610cff565b610ded5760405162461bcd60e51b815260206004820152602160248201527f526f6c65733a206163636f756e7420646f6573206e6f74206861766520726f6c6044820152606560f81b60648201526084016105a0565b6001600160a01b0316600090815260209190915260409020805460ff19169055565b610e198282610cff565b15610e665760405162461bcd60e51b815260206004820152601f60248201527f526f6c65733a206163636f756e7420616c72656164792068617320726f6c650060448201526064016105a0565b6001600160a01b0316600090815260209190915260409020805460ff19166001179055565b60065460ff1615610c0e5760405162461bcd60e51b815260206004820152602a60248201527f45524332305061757361626c653a20746f6b656e207472616e736665722077686044820152691a5b19481c185d5cd95960b21b60648201526084016105a0565b602081526000825180602084015260005b81811015610f1f5760208186018101516040868401015201610f02565b506000604082850101526040601f19601f83011684010191505092915050565b80356001600160a01b0381168114610f5657600080fd5b919050565b60008060408385031215610f6e57600080fd5b610f7783610f3f565b946020939093013593505050565b600080600060608486031215610f9a57600080fd5b610fa384610f3f565b9250610fb160208501610f3f565b929592945050506040919091013590565b60008060408385031215610fd557600080fd5b82359150610fe560208401610f3f565b90509250929050565b60006020828403121561100057600080fd5b61100982610f3f565b9392505050565b60006020828403121561102257600080fd5b5035919050565b6000806040838503121561103c57600080fd5b61104583610f3f565b9150610fe560208401610f3f565b600181811c9082168061106757607f821691505b60208210810361108757634e487b7160e01b600052602260045260246000fd5b50919050565b808201808211156103dc57634e487b7160e01b600052601160045260246000fdfea264697066735822122071cf4533bfbbc295a98c5db36f3112db2444d5f802151f11d3e10dab6ba931b264736f6c634300081c0033";

type ERC20TokenConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: ERC20TokenConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class ERC20Token__factory extends ContractFactory {
  constructor(...args: ERC20TokenConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    name: string,
    symbol: string,
    __decimals: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(
      name,
      symbol,
      __decimals,
      overrides || {}
    );
  }
  override deploy(
    name: string,
    symbol: string,
    __decimals: BigNumberish,
    overrides?: NonPayableOverrides & { from?: string }
  ) {
    return super.deploy(name, symbol, __decimals, overrides || {}) as Promise<
      ERC20Token & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): ERC20Token__factory {
    return super.connect(runner) as ERC20Token__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): ERC20TokenInterface {
    return new Interface(_abi) as ERC20TokenInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): ERC20Token {
    return new Contract(address, _abi, runner) as unknown as ERC20Token;
  }
}
